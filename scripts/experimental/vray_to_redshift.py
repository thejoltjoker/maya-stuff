#!/usr/bin/env python
"""
copy_attributes.py
Lists all attributes and their respective values, for selected object. Disregards attribute types: message, compound.
"""
import maya.cmds as cmds
ATTRIBUTES = {'affectAlpha': 'affects_alpha',
              'affectShadows': 'affectShadows',
              'anisotropy': 'anisotropy',
              'anisotropyAxis': 'anisotropy_orientation',
              'anisotropyDerivation': 'anisotropyDerivation',
              'anisotropyRotation': 'anisotropyRotation',
              'attributeAliasList': 'attributeAliasList',
              'binMembership': 'binMembership',
              'brdfType': 'brdfType',
              'bumpDeltaScale': 'bumpDeltaScale',
              'bumpMap': 'bump_input',
              'bumpMapB': 'bump_inputB',
              'bumpMapG': 'bump_inputG',
              'bumpMapR': 'bump_inputR',
              'bumpMapType': 'bumpMapType',
              'bumpMult': 'bumpMult',
              'bumpShadows': 'bumpShadows',
              'caching': 'caching',
              'color': 'diffuse_color',
              'compensateExposure': 'compensateExposure',
              'cutoffThreshold': 'cutoffThreshold',
              'diffuseColorAmount': 'diffuseColorAmount',
              'diffuseColorB': 'diffuse_colorB',
              'diffuseColorG': 'diffuse_colorG',
              'diffuseColorR': 'diffuse_colorR',
              'doubleSided': 'doubleSided',
              'fixDarkEdges': 'fixDarkEdges',
              'fogBias': 'fogBias',
              'fogColor': 'fogColor',
              'fogColorB': 'fogColorB',
              'fogColorG': 'fogColorG',
              'fogColorR': 'fogColorR',
              'fogMult': 'fogMult',
              'fresnelIOR': 'refl_ior',
              'frozen': 'frozen',
              'ggxOldTailFalloff': 'ggxOldTailFalloff',
              'ggxTailFalloff': 'ggxTailFalloff',
              'glossyFresnel': 'glossyFresnel',
              'hilightGlossiness': 'hilightGlossiness',
              'hilightGlossinessLock': 'hilightGlossinessLock',
              'illumColor': 'illumColor',
              'illumColorB': 'illumColorB',
              'illumColorG': 'illumColorG',
              'illumColorR': 'illumColorR',
              'illumGI': 'illumGI',
              'isHistoricallyInteresting': 'isHistoricallyInteresting',
              'lockFresnelIORToRefractionIOR': 'lockFresnelIORToRefractionIOR',
              'metalness': 'metalness',
              'nodeState': 'nodeState',
              'notes': 'notes',
              'opacityMap': 'opacityMap',
              'opacityMapB': 'opacityMapB',
              'opacityMapG': 'opacityMapG',
              'opacityMapR': 'opacityMapR',
              'opacityMode': 'opacityMode',
              'outApiClassification': 'outApiClassification',
              'outApiType': 'outApiType',
              'outColor': 'outColor',
              'outColorB': 'outColorB',
              'outColorG': 'outColorG',
              'outColorR': 'outColorR',
              'outTransparency': 'outTransparency',
              'outTransparencyB': 'outTransparencyB',
              'outTransparencyG': 'outTransparencyG',
              'outTransparencyR': 'outTransparencyR',
              'reflInterpolation': 'reflInterpolation',
              'reflMapColorThreshold': 'reflMapColorThreshold',
              'reflMapMaxRate': 'reflMapMaxRate',
              'reflMapMinRate': 'reflMapMinRate',
              'reflMapNormalThreshold': 'reflMapNormalThreshold',
              'reflMapSamples': 'reflMapSamples',
              'reflectOnBackSide': 'reflectOnBackSide',
              'reflectionAffectAlpha': 'reflectionAffectAlpha',
              'reflectionColor': 'refl_color',
              'reflectionColorAmount': 'reflectionColorAmount',
              'reflectionColorB': 'refl_colorB',
              'reflectionColorG': 'refl_colorG',
              'reflectionColorR': 'refl_colorR',
              'reflectionDimDistance': 'reflectionDimDistance',
              'reflectionDimDistanceOn': 'reflectionDimDistanceOn',
              'reflectionDimFallOff': 'reflectionDimFallOff',
              'reflectionExitColor': 'reflectionExitColor',
              'reflectionExitColorB': 'reflectionExitColorB',
              'reflectionExitColorG': 'reflectionExitColorG',
              'reflectionExitColorR': 'reflectionExitColorR',
              'reflectionGlossiness': 'reflectionGlossiness',
              'reflectionSubdivs': 'reflectionSubdivs',
              'reflectionsMaxDepth': 'reflectionsMaxDepth',
              'refrDispersionAbbe': 'refrDispersionAbbe',
              'refrDispersionOn': 'refrDispersionOn',
              'refrInterpolation': 'refrInterpolation',
              'refrMapColorThreshold': 'refrMapColorThreshold',
              'refrMapMaxRate': 'refrMapMaxRate',
              'refrMapMinRate': 'refrMapMinRate',
              'refrMapNormalThreshold': 'refrMapNormalThreshold',
              'refrMapSamples': 'refrMapSamples',
              'refractionColor': 'refr_color',
              'refractionColorAmount': 'refractionColorAmount',
              'refractionColorB': 'refr_colorB',
              'refractionColorG': 'refr_colorG',
              'refractionColorR': 'refr_colorR',
              'refractionExitColor': 'refractionExitColor',
              'refractionExitColorB': 'refractionExitColorB',
              'refractionExitColorG': 'refractionExitColorG',
              'refractionExitColorOn': 'refractionExitColorOn',
              'refractionExitColorR': 'refractionExitColorR',
              'refractionGlossiness': 'refractionGlossiness',
              'refractionIOR': 'refractionIOR',
              'refractionSubdivs': 'refractionSubdivs',
              'refractionsMaxDepth': 'refractionsMaxDepth',
              'roughnessAmount': 'roughnessAmount',
              'scatterCoeff': 'scatterCoeff',
              'scatterDir': 'scatterDir',
              'scatterLevels': 'scatterLevels',
              'scatterSubdivs': 'scatterSubdivs',
              'softenEdge': 'softenEdge',
              'sssEnvironment': 'sssEnvironment',
              'sssOn': 'sssOn',
              'swatchAlwaysRender': 'swatchAlwaysRender',
              'swatchAutoUpdate': 'swatchAutoUpdate',
              'swatchExplicitUpdate': 'swatchExplicitUpdate',
              'swatchMaxRes': 'swatchMaxRes',
              'thickness': 'thickness',
              'traceReflections': 'traceReflections',
              'traceRefractions': 'traceRefractions',
              'translucencyColor': 'translucencyColor',
              'translucencyColorB': 'translucencyColorB',
              'translucencyColorG': 'translucencyColorG',
              'translucencyColorR': 'translucencyColorR',
              'useFresnel': 'useFresnel',
              'useIrradianceMap': 'useIrradianceMap',
              'useRoughness': 'useRoughness'}
ATTRIBUTES_VRAY = {'affectAlpha': 'affectAlpha',
              'affectShadows': 'affectShadows',
              'anisotropy': 'anisotropy',
              'anisotropyAxis': 'anisotropyAxis',
              'anisotropyDerivation': 'anisotropyDerivation',
              'anisotropyRotation': 'anisotropyRotation',
              'attributeAliasList': 'attributeAliasList',
              'binMembership': 'binMembership',
              'brdfType': 'brdfType',
              'bumpDeltaScale': 'bumpDeltaScale',
              'bumpMap': 'bumpMap',
              'bumpMapB': 'bumpMapB',
              'bumpMapG': 'bumpMapG',
              'bumpMapR': 'bumpMapR',
              'bumpMapType': 'bumpMapType',
              'bumpMult': 'bumpMult',
              'bumpShadows': 'bumpShadows',
              'caching': 'caching',
              'color': 'color',
              'compensateExposure': 'compensateExposure',
              'cutoffThreshold': 'cutoffThreshold',
              'diffuseColorAmount': 'diffuseColorAmount',
              'diffuseColorB': 'diffuseColorB',
              'diffuseColorG': 'diffuseColorG',
              'diffuseColorR': 'diffuseColorR',
              'doubleSided': 'doubleSided',
              'fixDarkEdges': 'fixDarkEdges',
              'fogBias': 'fogBias',
              'fogColor': 'fogColor',
              'fogColorB': 'fogColorB',
              'fogColorG': 'fogColorG',
              'fogColorR': 'fogColorR',
              'fogMult': 'fogMult',
              'fresnelIOR': 'fresnelIOR',
              'frozen': 'frozen',
              'ggxOldTailFalloff': 'ggxOldTailFalloff',
              'ggxTailFalloff': 'ggxTailFalloff',
              'glossyFresnel': 'glossyFresnel',
              'hilightGlossiness': 'hilightGlossiness',
              'hilightGlossinessLock': 'hilightGlossinessLock',
              'illumColor': 'illumColor',
              'illumColorB': 'illumColorB',
              'illumColorG': 'illumColorG',
              'illumColorR': 'illumColorR',
              'illumGI': 'illumGI',
              'isHistoricallyInteresting': 'isHistoricallyInteresting',
              'lockFresnelIORToRefractionIOR': 'lockFresnelIORToRefractionIOR',
              'metalness': 'metalness',
              'nodeState': 'nodeState',
              'notes': 'notes',
              'opacityMap': 'opacityMap',
              'opacityMapB': 'opacityMapB',
              'opacityMapG': 'opacityMapG',
              'opacityMapR': 'opacityMapR',
              'opacityMode': 'opacityMode',
              'outApiClassification': 'outApiClassification',
              'outApiType': 'outApiType',
              'outColor': 'outColor',
              'outColorB': 'outColorB',
              'outColorG': 'outColorG',
              'outColorR': 'outColorR',
              'outTransparency': 'outTransparency',
              'outTransparencyB': 'outTransparencyB',
              'outTransparencyG': 'outTransparencyG',
              'outTransparencyR': 'outTransparencyR',
              'reflInterpolation': 'reflInterpolation',
              'reflMapColorThreshold': 'reflMapColorThreshold',
              'reflMapMaxRate': 'reflMapMaxRate',
              'reflMapMinRate': 'reflMapMinRate',
              'reflMapNormalThreshold': 'reflMapNormalThreshold',
              'reflMapSamples': 'reflMapSamples',
              'reflectOnBackSide': 'reflectOnBackSide',
              'reflectionAffectAlpha': 'reflectionAffectAlpha',
              'reflectionColor': 'reflectionColor',
              'reflectionColorAmount': 'reflectionColorAmount',
              'reflectionColorB': 'reflectionColorB',
              'reflectionColorG': 'reflectionColorG',
              'reflectionColorR': 'reflectionColorR',
              'reflectionDimDistance': 'reflectionDimDistance',
              'reflectionDimDistanceOn': 'reflectionDimDistanceOn',
              'reflectionDimFallOff': 'reflectionDimFallOff',
              'reflectionExitColor': 'reflectionExitColor',
              'reflectionExitColorB': 'reflectionExitColorB',
              'reflectionExitColorG': 'reflectionExitColorG',
              'reflectionExitColorR': 'reflectionExitColorR',
              'reflectionGlossiness': 'reflectionGlossiness',
              'reflectionSubdivs': 'reflectionSubdivs',
              'reflectionsMaxDepth': 'reflectionsMaxDepth',
              'refrDispersionAbbe': 'refrDispersionAbbe',
              'refrDispersionOn': 'refrDispersionOn',
              'refrInterpolation': 'refrInterpolation',
              'refrMapColorThreshold': 'refrMapColorThreshold',
              'refrMapMaxRate': 'refrMapMaxRate',
              'refrMapMinRate': 'refrMapMinRate',
              'refrMapNormalThreshold': 'refrMapNormalThreshold',
              'refrMapSamples': 'refrMapSamples',
              'refractionColor': 'refractionColor',
              'refractionColorAmount': 'refractionColorAmount',
              'refractionColorB': 'refractionColorB',
              'refractionColorG': 'refractionColorG',
              'refractionColorR': 'refractionColorR',
              'refractionExitColor': 'refractionExitColor',
              'refractionExitColorB': 'refractionExitColorB',
              'refractionExitColorG': 'refractionExitColorG',
              'refractionExitColorOn': 'refractionExitColorOn',
              'refractionExitColorR': 'refractionExitColorR',
              'refractionGlossiness': 'refractionGlossiness',
              'refractionIOR': 'refractionIOR',
              'refractionSubdivs': 'refractionSubdivs',
              'refractionsMaxDepth': 'refractionsMaxDepth',
              'roughnessAmount': 'roughnessAmount',
              'scatterCoeff': 'scatterCoeff',
              'scatterDir': 'scatterDir',
              'scatterLevels': 'scatterLevels',
              'scatterSubdivs': 'scatterSubdivs',
              'softenEdge': 'softenEdge',
              'sssEnvironment': 'sssEnvironment',
              'sssOn': 'sssOn',
              'swatchAlwaysRender': 'swatchAlwaysRender',
              'swatchAutoUpdate': 'swatchAutoUpdate',
              'swatchExplicitUpdate': 'swatchExplicitUpdate',
              'swatchMaxRes': 'swatchMaxRes',
              'thickness': 'thickness',
              'traceReflections': 'traceReflections',
              'traceRefractions': 'traceRefractions',
              'translucencyColor': 'translucencyColor',
              'translucencyColorB': 'translucencyColorB',
              'translucencyColorG': 'translucencyColorG',
              'translucencyColorR': 'translucencyColorR',
              'useFresnel': 'useFresnel',
              'useIrradianceMap': 'useIrradianceMap',
              'useRoughness': 'useRoughness'}
REDSHIFT_ATTRIBUTES = {'affects_alpha': 'affects_alpha',
                       'anisotropy_orientation': 'anisotropy_orientation',
                       'binMembership': 'binMembership',
                       'block_volumes': 'block_volumes',
                       'bump_input': 'bump_input',
                       'bump_inputB': 'bump_inputB',
                       'bump_inputG': 'bump_inputG',
                       'bump_inputR': 'bump_inputR',
                       'caching': 'caching',
                       'coat_brdf': 'coat_brdf',
                       'coat_bump_input': 'coat_bump_input',
                       'coat_bump_inputB': 'coat_bump_inputB',
                       'coat_bump_inputG': 'coat_bump_inputG',
                       'coat_bump_inputR': 'coat_bump_inputR',
                       'coat_color': 'coat_color',
                       'coat_colorB': 'coat_colorB',
                       'coat_colorG': 'coat_colorG',
                       'coat_colorR': 'coat_colorR',
                       'coat_direct': 'coat_direct',
                       'coat_fresnel_mode': 'coat_fresnel_mode',
                       'coat_indirect': 'coat_indirect',
                       'coat_ior': 'coat_ior',
                       'coat_ior3': 'coat_ior3',
                       'coat_ior30': 'coat_ior30',
                       'coat_ior31': 'coat_ior31',
                       'coat_ior32': 'coat_ior32',
                       'coat_isGlossiness': 'coat_isGlossiness',
                       'coat_reflectivity': 'coat_reflectivity',
                       'coat_reflectivityB': 'coat_reflectivityB',
                       'coat_reflectivityG': 'coat_reflectivityG',
                       'coat_reflectivityR': 'coat_reflectivityR',
                       'coat_roughness': 'coat_roughness',
                       'coat_samples': 'coat_samples',
                       'coat_thickness': 'coat_thickness',
                       'coat_transmittance': 'coat_transmittance',
                       'coat_transmittanceB': 'coat_transmittanceB',
                       'coat_transmittanceG': 'coat_transmittanceG',
                       'coat_transmittanceR': 'coat_transmittanceR',
                       'coat_weight': 'coat_weight',
                       'combined_depth': 'combined_depth',
                       'decoupleIORFromRoughness': 'decoupleIORFromRoughness',
                       'depth_override': 'depth_override',
                       'diffuse_color': 'diffuse_color',
                       'diffuse_colorB': 'diffuse_colorB',
                       'diffuse_colorG': 'diffuse_colorG',
                       'diffuse_colorR': 'diffuse_colorR',
                       'diffuse_direct': 'diffuse_direct',
                       'diffuse_indirect': 'diffuse_indirect',
                       'diffuse_roughness': 'diffuse_roughness',
                       'diffuse_weight': 'diffuse_weight',
                       'emission_color': 'emission_color',
                       'emission_colorB': 'emission_colorB',
                       'emission_colorG': 'emission_colorG',
                       'emission_colorR': 'emission_colorR',
                       'emission_weight': 'emission_weight',
                       'energyCompMode': 'energyCompMode',
                       'frozen': 'frozen',
                       'isHistoricallyInteresting': 'isHistoricallyInteresting',
                       'ms_amount': 'ms_amount',
                       'ms_color0': 'ms_color0',
                       'ms_color0B': 'ms_color0B',
                       'ms_color0G': 'ms_color0G',
                       'ms_color0R': 'ms_color0R',
                       'ms_color1': 'ms_color1',
                       'ms_color1B': 'ms_color1B',
                       'ms_color1G': 'ms_color1G',
                       'ms_color1R': 'ms_color1R',
                       'ms_color2': 'ms_color2',
                       'ms_color2B': 'ms_color2B',
                       'ms_color2G': 'ms_color2G',
                       'ms_color2R': 'ms_color2R',
                       'ms_include_mode': 'ms_include_mode',
                       'ms_mode': 'ms_mode',
                       'ms_radius0': 'ms_radius0',
                       'ms_radius1': 'ms_radius1',
                       'ms_radius2': 'ms_radius2',
                       'ms_radius_scale': 'ms_radius_scale',
                       'ms_samples': 'ms_samples',
                       'ms_weight0': 'ms_weight0',
                       'ms_weight1': 'ms_weight1',
                       'ms_weight2': 'ms_weight2',
                       'nodeState': 'nodeState',
                       'opacity_color': 'opacity_color',
                       'opacity_colorB': 'opacity_colorB',
                       'opacity_colorG': 'opacity_colorG',
                       'opacity_colorR': 'opacity_colorR',
                       'outApiClassification': 'outApiClassification',
                       'outApiType': 'outApiType',
                       'outColor': 'outColor',
                       'outColorB': 'outColorB',
                       'outColorG': 'outColorG',
                       'outColorR': 'outColorR',
                       'overallAffectsEmission': 'overallAffectsEmission',
                       'overall_color': 'overall_color',
                       'overall_colorB': 'overall_colorB',
                       'overall_colorG': 'overall_colorG',
                       'overall_colorR': 'overall_colorR',
                       'preset': 'preset',
                       'refl_aniso': 'refl_aniso',
                       'refl_aniso_rotation': 'refl_aniso_rotation',
                       'refl_brdf': 'refl_brdf',
                       'refl_color': 'refl_color',
                       'refl_colorB': 'refl_colorB',
                       'refl_colorG': 'refl_colorG',
                       'refl_colorR': 'refl_colorR',
                       'refl_cutoff': 'refl_cutoff',
                       'refl_depth': 'refl_depth',
                       'refl_direct': 'refl_direct',
                       'refl_edge_tint': 'refl_edge_tint',
                       'refl_edge_tintB': 'refl_edge_tintB',
                       'refl_edge_tintG': 'refl_edge_tintG',
                       'refl_edge_tintR': 'refl_edge_tintR',
                       'refl_enablecutoff': 'refl_enablecutoff',
                       'refl_endmode': 'refl_endmode',
                       'refl_fresnel_mode': 'refl_fresnel_mode',
                       'refl_indirect': 'refl_indirect',
                       'refl_ior': 'refl_ior',
                       'refl_ior3': 'refl_ior3',
                       'refl_ior30': 'refl_ior30',
                       'refl_ior31': 'refl_ior31',
                       'refl_ior32': 'refl_ior32',
                       'refl_isGlossiness': 'refl_isGlossiness',
                       'refl_k3': 'refl_k3',
                       'refl_k30': 'refl_k30',
                       'refl_k31': 'refl_k31',
                       'refl_k32': 'refl_k32',
                       'refl_metalness': 'refl_metalness',
                       'refl_reflectivity': 'refl_reflectivity',
                       'refl_reflectivityB': 'refl_reflectivityB',
                       'refl_reflectivityG': 'refl_reflectivityG',
                       'refl_reflectivityR': 'refl_reflectivityR',
                       'refl_roughness': 'refl_roughness',
                       'refl_samples': 'refl_samples',
                       'refl_weight': 'refl_weight',
                       'refr_abbe': 'refr_abbe',
                       'refr_absorption_scale': 'refr_absorption_scale',
                       'refr_color': 'refr_color',
                       'refr_colorB': 'refr_colorB',
                       'refr_colorG': 'refr_colorG',
                       'refr_colorR': 'refr_colorR',
                       'refr_cutoff': 'refr_cutoff',
                       'refr_depth': 'refr_depth',
                       'refr_enablecutoff': 'refr_enablecutoff',
                       'refr_ior': 'refr_ior',
                       'refr_isGlossiness': 'refr_isGlossiness',
                       'refr_roughness': 'refr_roughness',
                       'refr_samples': 'refr_samples',
                       'refr_thin_walled': 'refr_thin_walled',
                       'refr_transmittance': 'refr_transmittance',
                       'refr_transmittanceB': 'refr_transmittanceB',
                       'refr_transmittanceG': 'refr_transmittanceG',
                       'refr_transmittanceR': 'refr_transmittanceR',
                       'refr_use_base_IOR': 'refr_use_base_IOR',
                       'refr_weight': 'refr_weight',
                       'shaderNodeTemplate': 'shaderNodeTemplate',
                       'shadow_opacity': 'shadow_opacity',
                       'sheen_color': 'sheen_color',
                       'sheen_colorB': 'sheen_colorB',
                       'sheen_colorG': 'sheen_colorG',
                       'sheen_colorR': 'sheen_colorR',
                       'sheen_direct': 'sheen_direct',
                       'sheen_indirect': 'sheen_indirect',
                       'sheen_isGlossiness': 'sheen_isGlossiness',
                       'sheen_roughness': 'sheen_roughness',
                       'sheen_samples': 'sheen_samples',
                       'sheen_weight': 'sheen_weight',
                       'skip_inside_refl': 'skip_inside_refl',
                       'ss_amount': 'ss_amount',
                       'ss_extinction_coeff': 'ss_extinction_coeff',
                       'ss_extinction_coeffB': 'ss_extinction_coeffB',
                       'ss_extinction_coeffG': 'ss_extinction_coeffG',
                       'ss_extinction_coeffR': 'ss_extinction_coeffR',
                       'ss_extinction_scale': 'ss_extinction_scale',
                       'ss_phase': 'ss_phase',
                       'ss_samples': 'ss_samples',
                       'ss_scatter_coeff': 'ss_scatter_coeff',
                       'ss_scatter_coeffB': 'ss_scatter_coeffB',
                       'ss_scatter_coeffG': 'ss_scatter_coeffG',
                       'ss_scatter_coeffR': 'ss_scatter_coeffR',
                       'ss_unitsMode': 'ss_unitsMode',
                       'transl_color': 'transl_color',
                       'transl_colorB': 'transl_colorB',
                       'transl_colorG': 'transl_colorG',
                       'transl_colorR': 'transl_colorR',
                       'transl_weight': 'transl_weight',
                       'uvSet': 'uvSet',
                       'version': 'version'}


def main():
    """docstring for main"""
    nodes = cmds.ls(sl=True)
    source = nodes[0]
    dest = nodes[1]

    attribute_list = cmds.listAttr(source)
    for attr in attribute_list:
        if '.' not in attr:
            attribute_type = cmds.attributeQuery(attr, node=source, at=True)
            if attribute_type not in ['message', 'compound']:
                attribute_value = cmds.getAttr('{}.{}'.format(source, attr))
                try:
                    cmds.setAttr('{}.{}'.format(dest, ATTRIBUTES[attr]))
                except Exception as e:
                    print(e)


if __name__ == '__main__':
    main()
